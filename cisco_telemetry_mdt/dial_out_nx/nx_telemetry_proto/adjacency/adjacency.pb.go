// ----------------------------------------------------------------------------
// adjacency.proto - Adjacency protobuf definitions
//
// September 2018
//
// Copyright (c) 2018-2019 by Cisco Systems, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.7.1
// source: adjacency.proto

package adjacency

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Adjacency event type
type AdjacencyEventType int32

const (
	AdjacencyEventType_ADJACENCY_EVENT_TYPE_NO_EVENT      AdjacencyEventType = 0
	AdjacencyEventType_ADJACENCY_EVENT_TYPE_ADD           AdjacencyEventType = 1
	AdjacencyEventType_ADJACENCY_EVENT_TYPE_DELETE        AdjacencyEventType = 2
	AdjacencyEventType_ADJACENCY_EVENT_TYPE_UPDATE        AdjacencyEventType = 3
	AdjacencyEventType_ADJACENCY_EVENT_TYPE_DOWNLOAD      AdjacencyEventType = 4
	AdjacencyEventType_ADJACENCY_EVENT_TYPE_DOWNLOAD_DONE AdjacencyEventType = 5
)

// Enum value maps for AdjacencyEventType.
var (
	AdjacencyEventType_name = map[int32]string{
		0: "ADJACENCY_EVENT_TYPE_NO_EVENT",
		1: "ADJACENCY_EVENT_TYPE_ADD",
		2: "ADJACENCY_EVENT_TYPE_DELETE",
		3: "ADJACENCY_EVENT_TYPE_UPDATE",
		4: "ADJACENCY_EVENT_TYPE_DOWNLOAD",
		5: "ADJACENCY_EVENT_TYPE_DOWNLOAD_DONE",
	}
	AdjacencyEventType_value = map[string]int32{
		"ADJACENCY_EVENT_TYPE_NO_EVENT":      0,
		"ADJACENCY_EVENT_TYPE_ADD":           1,
		"ADJACENCY_EVENT_TYPE_DELETE":        2,
		"ADJACENCY_EVENT_TYPE_UPDATE":        3,
		"ADJACENCY_EVENT_TYPE_DOWNLOAD":      4,
		"ADJACENCY_EVENT_TYPE_DOWNLOAD_DONE": 5,
	}
)

func (x AdjacencyEventType) Enum() *AdjacencyEventType {
	p := new(AdjacencyEventType)
	*p = x
	return p
}

func (x AdjacencyEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdjacencyEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_adjacency_proto_enumTypes[0].Descriptor()
}

func (AdjacencyEventType) Type() protoreflect.EnumType {
	return &file_adjacency_proto_enumTypes[0]
}

func (x AdjacencyEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdjacencyEventType.Descriptor instead.
func (AdjacencyEventType) EnumDescriptor() ([]byte, []int) {
	return file_adjacency_proto_rawDescGZIP(), []int{0}
}

// Adjacency address family
type AdjacencyAddressFamily int32

const (
	AdjacencyAddressFamily_ADJACENCY_AF_IPV4 AdjacencyAddressFamily = 0
	AdjacencyAddressFamily_ADJACENCY_AF_IPV6 AdjacencyAddressFamily = 1
)

// Enum value maps for AdjacencyAddressFamily.
var (
	AdjacencyAddressFamily_name = map[int32]string{
		0: "ADJACENCY_AF_IPV4",
		1: "ADJACENCY_AF_IPV6",
	}
	AdjacencyAddressFamily_value = map[string]int32{
		"ADJACENCY_AF_IPV4": 0,
		"ADJACENCY_AF_IPV6": 1,
	}
)

func (x AdjacencyAddressFamily) Enum() *AdjacencyAddressFamily {
	p := new(AdjacencyAddressFamily)
	*p = x
	return p
}

func (x AdjacencyAddressFamily) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdjacencyAddressFamily) Descriptor() protoreflect.EnumDescriptor {
	return file_adjacency_proto_enumTypes[1].Descriptor()
}

func (AdjacencyAddressFamily) Type() protoreflect.EnumType {
	return &file_adjacency_proto_enumTypes[1]
}

func (x AdjacencyAddressFamily) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdjacencyAddressFamily.Descriptor instead.
func (AdjacencyAddressFamily) EnumDescriptor() ([]byte, []int) {
	return file_adjacency_proto_rawDescGZIP(), []int{1}
}

// Adjacency message
type NxAdjacencyProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP address
	IpAddress string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// MAC address
	MacAddress string `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// Interface name
	InterfaceName string `protobuf:"bytes,3,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	// Physical interface name
	PhysicalInterfaceName string `protobuf:"bytes,4,opt,name=physical_interface_name,json=physicalInterfaceName,proto3" json:"physical_interface_name,omitempty"`
	// vrf name
	VrfName string `protobuf:"bytes,5,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	// Preference
	Preference uint32 `protobuf:"varint,6,opt,name=preference,proto3" json:"preference,omitempty"`
	// source for the adjacency
	Source string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	// Address family for the adjacency
	AddressFamily AdjacencyAddressFamily `protobuf:"varint,8,opt,name=address_family,json=addressFamily,proto3,enum=AdjacencyAddressFamily" json:"address_family,omitempty"`
	// Adjacency event type
	EventType AdjacencyEventType `protobuf:"varint,9,opt,name=event_type,json=eventType,proto3,enum=AdjacencyEventType" json:"event_type,omitempty"`
	Timestamp uint64             `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Mac associated with multiple ip.
	Addrlist []string `protobuf:"bytes,11,rep,name=addrlist,proto3" json:"addrlist,omitempty"`
}

func (x *NxAdjacencyProto) Reset() {
	*x = NxAdjacencyProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adjacency_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NxAdjacencyProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NxAdjacencyProto) ProtoMessage() {}

func (x *NxAdjacencyProto) ProtoReflect() protoreflect.Message {
	mi := &file_adjacency_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NxAdjacencyProto.ProtoReflect.Descriptor instead.
func (*NxAdjacencyProto) Descriptor() ([]byte, []int) {
	return file_adjacency_proto_rawDescGZIP(), []int{0}
}

func (x *NxAdjacencyProto) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NxAdjacencyProto) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NxAdjacencyProto) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *NxAdjacencyProto) GetPhysicalInterfaceName() string {
	if x != nil {
		return x.PhysicalInterfaceName
	}
	return ""
}

func (x *NxAdjacencyProto) GetVrfName() string {
	if x != nil {
		return x.VrfName
	}
	return ""
}

func (x *NxAdjacencyProto) GetPreference() uint32 {
	if x != nil {
		return x.Preference
	}
	return 0
}

func (x *NxAdjacencyProto) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *NxAdjacencyProto) GetAddressFamily() AdjacencyAddressFamily {
	if x != nil {
		return x.AddressFamily
	}
	return AdjacencyAddressFamily_ADJACENCY_AF_IPV4
}

func (x *NxAdjacencyProto) GetEventType() AdjacencyEventType {
	if x != nil {
		return x.EventType
	}
	return AdjacencyEventType_ADJACENCY_EVENT_TYPE_NO_EVENT
}

func (x *NxAdjacencyProto) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NxAdjacencyProto) GetAddrlist() []string {
	if x != nil {
		return x.Addrlist
	}
	return nil
}

var File_adjacency_proto protoreflect.FileDescriptor

var file_adjacency_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x64, 0x6a, 0x61, 0x63, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb2, 0x03, 0x0a, 0x10, 0x4e, 0x78, 0x41, 0x64, 0x6a, 0x61, 0x63, 0x65, 0x6e, 0x63,
	0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a,
	0x17, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x72, 0x66, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x72, 0x66, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x41, 0x64, 0x6a, 0x61, 0x63, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x41,
	0x64, 0x6a, 0x61, 0x63, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64,
	0x64, 0x72, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64,
	0x64, 0x72, 0x6c, 0x69, 0x73, 0x74, 0x2a, 0xe2, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x6a, 0x61, 0x63,
	0x65, 0x6e, 0x63, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x1d, 0x41, 0x44, 0x4a, 0x41, 0x43, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x00,
	0x12, 0x1c, 0x0a, 0x18, 0x41, 0x44, 0x4a, 0x41, 0x43, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x1f,
	0x0a, 0x1b, 0x41, 0x44, 0x4a, 0x41, 0x43, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12,
	0x1f, 0x0a, 0x1b, 0x41, 0x44, 0x4a, 0x41, 0x43, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03,
	0x12, 0x21, 0x0a, 0x1d, 0x41, 0x44, 0x4a, 0x41, 0x43, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41,
	0x44, 0x10, 0x04, 0x12, 0x26, 0x0a, 0x22, 0x41, 0x44, 0x4a, 0x41, 0x43, 0x45, 0x4e, 0x43, 0x59,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x05, 0x2a, 0x46, 0x0a, 0x16, 0x41,
	0x64, 0x6a, 0x61, 0x63, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x44, 0x4a, 0x41, 0x43, 0x45, 0x4e,
	0x43, 0x59, 0x5f, 0x41, 0x46, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x41, 0x44, 0x4a, 0x41, 0x43, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x41, 0x46, 0x5f, 0x49, 0x50, 0x56,
	0x36, 0x10, 0x01, 0x42, 0x0e, 0x5a, 0x09, 0x61, 0x64, 0x6a, 0x61, 0x63, 0x65, 0x6e, 0x63, 0x79,
	0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_adjacency_proto_rawDescOnce sync.Once
	file_adjacency_proto_rawDescData = file_adjacency_proto_rawDesc
)

func file_adjacency_proto_rawDescGZIP() []byte {
	file_adjacency_proto_rawDescOnce.Do(func() {
		file_adjacency_proto_rawDescData = protoimpl.X.CompressGZIP(file_adjacency_proto_rawDescData)
	})
	return file_adjacency_proto_rawDescData
}

var file_adjacency_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_adjacency_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_adjacency_proto_goTypes = []interface{}{
	(AdjacencyEventType)(0),     // 0: AdjacencyEventType
	(AdjacencyAddressFamily)(0), // 1: AdjacencyAddressFamily
	(*NxAdjacencyProto)(nil),    // 2: NxAdjacencyProto
}
var file_adjacency_proto_depIdxs = []int32{
	1, // 0: NxAdjacencyProto.address_family:type_name -> AdjacencyAddressFamily
	0, // 1: NxAdjacencyProto.event_type:type_name -> AdjacencyEventType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_adjacency_proto_init() }
func file_adjacency_proto_init() {
	if File_adjacency_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_adjacency_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NxAdjacencyProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_adjacency_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_adjacency_proto_goTypes,
		DependencyIndexes: file_adjacency_proto_depIdxs,
		EnumInfos:         file_adjacency_proto_enumTypes,
		MessageInfos:      file_adjacency_proto_msgTypes,
	}.Build()
	File_adjacency_proto = out.File
	file_adjacency_proto_rawDesc = nil
	file_adjacency_proto_goTypes = nil
	file_adjacency_proto_depIdxs = nil
}
